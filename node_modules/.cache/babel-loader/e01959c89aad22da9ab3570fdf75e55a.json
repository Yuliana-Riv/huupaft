{"ast":null,"code":"import { VueEditor } from \"vue2-editor\";\nimport { mapActions } from \"vuex\";\nlet urlpath = require(\"../../global/index\");\nexport default {\n  name: \"EditClb\",\n  components: {\n    VueEditor\n  },\n  data() {\n    return {\n      status: \"\",\n      message: \"\",\n      status2: \"\",\n      message2: \"\",\n      active: false,\n      urlpath: urlpath,\n      statusimg: \"success\",\n      archivo: \"No se eligió archivo\",\n      //MODAL\n      file1: null,\n      viewModal: false\n    };\n  },\n  created() {\n    let payload = {\n      id: this.added.id,\n      option: \"colaboradores\"\n    };\n    this.getInfoByIdClb(payload);\n  },\n  computed: {\n    added() {\n      return this.$store.getters[\"colaboradores/getAdded\"];\n    },\n    data() {\n      return this.$store.getters[\"colaboradores/data\"];\n    }\n  },\n  methods: {\n    ...mapActions(\"colaboradores\", [\"setAddedClb\"]),\n    ...mapActions(\"colaboradores\", [\"setHistoryOptionClb\"]),\n    ...mapActions(\"colaboradores\", [\"getInfoByIdClb\"]),\n    wait: function () {\n      setTimeout(() => this.$router.go(), 200);\n    },\n    submit: async function (name, descrp, about, facebook, instagram, twiter, linkedin, email) {\n      this.status = \"\";\n      this.message = \"\";\n      let data = {\n        id: this.added.id,\n        name: name,\n        descrp: descrp,\n        about: about,\n        facebook: facebook,\n        instagram: instagram,\n        twiter: twiter,\n        linkedin: linkedin,\n        email: email\n      };\n      let result = await this.$store.dispatch(\"colaboradores/editItemClb\", {\n        option: \"colaboradores\",\n        item: data\n      });\n      if (result.status == \"error\") {\n        this.status = \"error\";\n        this.message = result.message;\n      } else {\n        // success\n        this.showModal();\n      }\n    },\n    closeSelect() {\n      this.active = false;\n      document.getElementById(\"select-ch\").checked = false;\n    },\n    submitImg: async function (image) {\n      this.status = \"\";\n      this.msg = \"\";\n      if (image != null) {\n        if (image.size > 5000000) {\n          this.status2 = \"error\";\n          this.message2 = \"La imagen excede el tamaño maximo permitido de 1MB.\";\n          this.delStatus();\n        } else {\n          //Creamos el formData\n          var data = new FormData();\n          //Añadimos la imagen seleccionada\n          data.append(\"image\", image);\n          //Añadimos el método PUT dentro del formData\n          // Como lo hacíamos desde un formulario simple _(no ajax)_\n          data.append(\"_method\", \"PUT\");\n          //Enviamos la petición\n          let result = await this.$store.dispatch(\"main/editImage\", {\n            id: this.added.id,\n            item: data,\n            option: \"colaboradores\"\n          });\n          console.log(result);\n          if (result.status == \"error\") {\n            this.status2 = \"error\";\n            this.message2 = result.message;\n            this.delStatus();\n          } else {\n            // success\n            this.showModal();\n          }\n        }\n      } else {\n        this.status2 = \"error\";\n        this.message2 = \"Imagen no subida.\";\n        this.delStatus();\n      }\n    },\n    delStatus: function () {\n      setTimeout(() => this.delMsgs(), 2000);\n    },\n    delMsgs: function () {\n      this.status = \"\";\n      this.message = \"\";\n      this.status2 = \"\";\n      this.message2 = \"\";\n    },\n    showModal: function () {\n      this.viewModal = true;\n    },\n    closeModal: function () {\n      this.viewModal = false;\n      this.setAddedClb(\"\");\n      this.setHistoryOptionClb(\"Default\");\n    },\n    Edit: function () {\n      this.viewModal = false;\n    },\n    back: function () {\n      setTimeout(() => this.$router.go(), 200);\n    },\n    toolbar: function () {\n      if (this.tipo == \"video\") {\n        return [[\"video\"]];\n      } else if (this.tipo == \"imagen\") {\n        return [[\"image\"]];\n      } else {\n        return [[\"bold\", \"italic\", \"underline\", \"strike\"],\n        // toggled buttons\n        [\"blockquote\", \"code-block\"], [{\n          header: 1\n        }, {\n          header: 2\n        }],\n        // custom button values\n        [{\n          list: \"ordered\"\n        }, {\n          list: \"bullet\"\n        }], [{\n          script: \"sub\"\n        }, {\n          script: \"super\"\n        }],\n        // superscript/subscript\n        [{\n          indent: \"-1\"\n        }, {\n          indent: \"+1\"\n        }],\n        // outdent/indent\n        [{\n          direction: \"rtl\"\n        }],\n        // text direction\n\n        [{\n          size: [\"small\", false, \"large\", \"huge\"]\n        }],\n        // custom dropdown\n        [{\n          header: [1, 2, 3, 4, 5, 6, false]\n        }], [\"link\"],\n        // add's image support\n        [{\n          color: []\n        }, {\n          background: []\n        }],\n        // dropdown with defaults from theme\n        [{\n          font: []\n        }], [{\n          align: []\n        }], [\"clean\"] // remove formatting button\n        ];\n      }\n    },\n\n    previewFiles(e) {\n      var files = e.target.files || e.dataTransfer.files;\n      if (!files.length) return;\n      this.file1 = files[0];\n      this.archivo = this.file1.name;\n    },\n    srcImg: function (img) {\n      let src = `${urlpath.url()}/c15_BjM/UQ7-CoE/colaboradores-img/${img}`;\n      this.status_img(img);\n      return src;\n    },\n    status_img: async function (img) {\n      let payload = {\n        option: \"colaboradores\",\n        image: img\n      };\n      let response = \"\";\n      try {\n        response = await this.$store.dispatch(\"main/getStatusImage\", payload);\n        if (response.data.status == \"error\") {\n          this.statusimg = \"error\";\n        } else {\n          this.statusimg = \"success\";\n        }\n      } catch (err) {\n        this.statusimg = \"error\";\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAgLA;AACA;AACA;AACA;EACAA;EACAC;IACAC;EACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MAEA;MACAC;MACAC;IACA;EACA;EACAC;IACA;MACAC;MACAC;IACA;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAf;MACA;IACA;EACA;EACAgB;IACA;IACA;IACA;IACAC;MACAC;IACA;IACAC,wBACAtB,MACAuB,QACAC,OACAC,UACAC,WACAC,QACAC,UACAC,OACA;MACA;MACA;MACA;QACAd;QACAf;QACAuB;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MAEA;QACAb;QACAc;MACA;MAEA;QACA;QACA;MACA;QACA;QACA;MACA;IACA;IACAC;MACA;MACAC;IACA;IACAC;MACA;MACA;MAEA;QACA;UACA;UACA;UACA;QACA;UACA;UACA;UACA;UACA9B;UACA;UACA;UACAA;UACA;UACA;YACAY;YACAe;YACAd;UACA;UACAkB;UAEA;YACA;YACA;YACA;UACA;YACA;YACA;UACA;QACA;MACA;QACA;QACA;QACA;MACA;IACA;IAEAC;MACAd;IACA;IACAe;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACAnB;IACA;IACAoB;MACA;QACA;MACA;QACA;MACA;QACA,QACA;QAAA;QACA,8BAEA;UAAAC;QAAA;UAAAA;QAAA;QAAA;QACA;UAAAC;QAAA;UAAAA;QAAA,IACA;UAAAC;QAAA;UAAAA;QAAA;QAAA;QACA;UAAAC;QAAA;UAAAA;QAAA;QAAA;QACA;UAAAC;QAAA;QAAA;;QAEA;UAAAC;QAAA;QAAA;QACA;UAAAL;QAAA,IACA;QAAA;QACA;UAAAM;QAAA;UAAAC;QAAA;QAAA;QACA;UAAAC;QAAA,IACA;UAAAC;QAAA,IAEA;QAAA,CACA;MACA;IACA;;IAEAC;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MAEA;MAEA;IACA;IAEAC;MACA;QACAtC;QACAuC;MACA;MACA;MAEA;QACAC;QACA;UACA;QACA;UACA;QACA;MACA;QACA;MACA;IACA;EACA;AACA","names":["name","components","VueEditor","data","status","message","status2","message2","active","urlpath","statusimg","archivo","file1","viewModal","created","id","option","computed","added","methods","wait","setTimeout","submit","descrp","about","facebook","instagram","twiter","linkedin","email","item","closeSelect","document","submitImg","console","delStatus","delMsgs","showModal","closeModal","Edit","back","toolbar","header","list","script","indent","direction","size","color","background","font","align","previewFiles","srcImg","status_img","image","response"],"sourceRoot":"src/views/colaboradores","sources":["editClb.vue"],"sourcesContent":["<template >\r\n  <div id=\"EditClb\">\r\n    <div class=\"form-content\">\r\n      <form\r\n        @submit.prevent=\"\r\n          submit(\r\n            added.name,\r\n            added.descrp,\r\n            added.about,\r\n            added.facebook,\r\n            added.instagram,\r\n            added.twiter,\r\n            added.linkedin,\r\n            added.email\r\n          )\r\n        \"\r\n      >\r\n        <div class=\"grup-form dflx\">\r\n          <div class=\"boxform\">\r\n            <label for=\"name\" class=\"name\">Nombre </label>\r\n            <input\r\n              v-model=\"added.name\"\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              pattern=\"[a-zA-ZñÑáéíóúÁÉÍÓÚ0-9\\s]{2,254}\"\r\n              required\r\n            />\r\n          </div>\r\n          <div class=\"boxform\">\r\n            <label for=\"descrp\" class=\"descrp\">Descripción </label>\r\n            <input\r\n              v-model=\"added.descrp\"\r\n              type=\"text\"\r\n              id=\"descrp\"\r\n              name=\"descrp\"\r\n              required\r\n            />\r\n          </div>\r\n          <div class=\"boxform\">\r\n            <label for=\"facebook\" class=\"facebook\">Facebook </label>\r\n            <input\r\n              v-model=\"added.facebook\"\r\n              type=\"text\"\r\n              id=\"facebook\"\r\n              name=\"facebook\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"grup-form dflx\">\r\n          <div class=\"boxform\">\r\n            <label for=\"instagram\" class=\"instagram\">Instagram </label>\r\n            <input\r\n              v-model=\"added.instagram\"\r\n              type=\"text\"\r\n              id=\"instagram\"\r\n              name=\"instagram\"\r\n            />\r\n          </div>\r\n          <div class=\"boxform\">\r\n            <label for=\"twiter\" class=\"twiter\">Twiter </label>\r\n            <input\r\n              v-model=\"added.twiter\"\r\n              type=\"text\"\r\n              id=\"twiter\"\r\n              name=\"twiter\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"boxform\">\r\n            <label for=\"linkedin\" class=\"linkedin\">Linkedin </label>\r\n            <input\r\n              v-model=\"added.linkedin\"\r\n              type=\"text\"\r\n              id=\"linkedin\"\r\n              name=\"linkedin\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"grup-form dflx\">\r\n          <div class=\"boxform\">\r\n            <label for=\"email\" class=\"correo\">Correo electrónico </label>\r\n            <input v-model=\"added.email\" type=\"text\" id=\"email\" name=\"email\" />\r\n          </div>\r\n        </div>\r\n\r\n        <label for=\"about\" class=\"about\">About </label>\r\n        <vue-editor\r\n          id=\"editor\"\r\n          class=\"quill-editor-about\"\r\n          :editorToolbar=\"toolbar()\"\r\n          v-model=\"added.about\"\r\n        >\r\n        </vue-editor>\r\n\r\n        <div class=\"dflx\">\r\n          <p @click=\"wait()\" class=\"btnRegresar\">Regresar</p>\r\n          <button class=\"alta\" type=\"submit\">Editar</button>\r\n        </div>\r\n\r\n        <div v-if=\"status != ''\" class=\"status_messages\">\r\n          <div v-if=\"status == 'success'\" class=\"msg msg_success\">\r\n            <p>{{ message }}</p>\r\n          </div>\r\n          <div v-if=\"status == 'error'\" class=\"msg msg_error\">\r\n            <p>{{ message }}</p>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <hr class=\"hrhd\" />\r\n\r\n    <div class=\"dflx\">\r\n      <div class=\"form-img\">\r\n        <div class=\"grup-form dflx\">\r\n          <div class=\"boxform\">\r\n            <label>Imagen</label>\r\n            <div class=\"dflx\">\r\n              <label class=\"filelabel\" for=\"uploadimg\">\r\n                <span>Seleccionar Archivo</span></label\r\n              >\r\n              <label class=\"filelabelname tbl_item\" for=\"uploadimg\">\r\n                {{ archivo }}</label\r\n              >\r\n            </div>\r\n\r\n            <input\r\n              @change=\"previewFiles\"\r\n              type=\"file\"\r\n              id=\"uploadimg\"\r\n              name=\"uploadimg\"\r\n              required\r\n              class=\"fileinput\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"dflx\">\r\n          <div @click=\"submitImg(file1)\" class=\"btn_añadir2 dflx\">\r\n            <p>AGREGA <span> IMAGEN</span></p>\r\n            <img src=\"../../assets/upload.png\" alt=\"\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div v-if=\"status2 != ''\" class=\"status_messages\">\r\n          <div v-if=\"status2 == 'success'\" class=\"msg msg_success\">\r\n            <p>{{ message2 }}</p>\r\n          </div>\r\n          <div v-if=\"status2 == 'error'\" class=\"msg msg_error\">\r\n            <p>{{ message2 }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div v-if=\"statusimg == 'success'\" class=\"img-item\">\r\n        <img :src=\"this.srcImg(added.image)\" alt=\"imagen colaborador\" />\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"viewModal\" class=\"modal_view\">\r\n      <div id=\"modal_edit\">\r\n        <div class=\"body dflx\">\r\n          <h3>Colaborador actualizado</h3>\r\n          <img src=\"../../assets/add.png\" alt=\"icono alerta\" />\r\n        </div>\r\n\r\n        <div class=\"modal_edit_btns dflx\">\r\n          <p @click=\"wait()\" class=\"otro\">Aceptar</p>\r\n          <!-- <p  @click=\"back()\" class=\"inicio\">Inicio</p>-->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { VueEditor } from \"vue2-editor\";\r\nimport { mapActions } from \"vuex\";\r\nlet urlpath = require(\"../../global/index\");\r\nexport default {\r\n  name: \"EditClb\",\r\n  components: {\r\n    VueEditor,\r\n  },\r\n  data() {\r\n    return {\r\n      status: \"\",\r\n      message: \"\",\r\n      status2: \"\",\r\n      message2: \"\",\r\n      active: false,\r\n      urlpath: urlpath,\r\n      statusimg: \"success\",\r\n      archivo: \"No se eligió archivo\",\r\n\r\n      //MODAL\r\n      file1: null,\r\n      viewModal: false,\r\n    };\r\n  },\r\n  created() {\r\n    let payload = {\r\n      id: this.added.id,\r\n      option: \"colaboradores\",\r\n    };\r\n    this.getInfoByIdClb(payload);\r\n  },\r\n  computed: {\r\n    added() {\r\n      return this.$store.getters[\"colaboradores/getAdded\"];\r\n    },\r\n    data() {\r\n      return this.$store.getters[\"colaboradores/data\"];\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapActions(\"colaboradores\", [\"setAddedClb\"]),\r\n    ...mapActions(\"colaboradores\", [\"setHistoryOptionClb\"]),\r\n    ...mapActions(\"colaboradores\", [\"getInfoByIdClb\"]),\r\n    wait: function () {\r\n      setTimeout(() => this.$router.go(), 200);\r\n    },\r\n    submit: async function (\r\n      name,\r\n      descrp,\r\n      about,\r\n      facebook,\r\n      instagram,\r\n      twiter,\r\n      linkedin,\r\n      email\r\n    ) {\r\n      this.status = \"\";\r\n      this.message = \"\";\r\n      let data = {\r\n        id: this.added.id,\r\n        name: name,\r\n        descrp: descrp,\r\n        about: about,\r\n        facebook: facebook,\r\n        instagram: instagram,\r\n        twiter: twiter,\r\n        linkedin: linkedin,\r\n        email: email,\r\n      };\r\n\r\n      let result = await this.$store.dispatch(\"colaboradores/editItemClb\", {\r\n        option: \"colaboradores\",\r\n        item: data,\r\n      });\r\n\r\n      if (result.status == \"error\") {\r\n        this.status = \"error\";\r\n        this.message = result.message;\r\n      } else {\r\n        // success\r\n        this.showModal();\r\n      }\r\n    },\r\n    closeSelect() {\r\n      this.active = false;\r\n      document.getElementById(\"select-ch\").checked = false;\r\n    },\r\n    submitImg: async function (image) {\r\n      this.status = \"\";\r\n      this.msg = \"\";\r\n\r\n      if (image != null) {\r\n        if (image.size > 5000000) {\r\n          this.status2 = \"error\";\r\n          this.message2 = \"La imagen excede el tamaño maximo permitido de 1MB.\";\r\n          this.delStatus();\r\n        } else {\r\n          //Creamos el formData\r\n          var data = new FormData();\r\n          //Añadimos la imagen seleccionada\r\n          data.append(\"image\", image);\r\n          //Añadimos el método PUT dentro del formData\r\n          // Como lo hacíamos desde un formulario simple _(no ajax)_\r\n          data.append(\"_method\", \"PUT\");\r\n          //Enviamos la petición\r\n          let result = await this.$store.dispatch(\"main/editImage\", {\r\n            id: this.added.id,\r\n            item: data,\r\n            option: \"colaboradores\",\r\n          });\r\n          console.log(result);\r\n\r\n          if (result.status == \"error\") {\r\n            this.status2 = \"error\";\r\n            this.message2 = result.message;\r\n            this.delStatus();\r\n          } else {\r\n            // success\r\n            this.showModal();\r\n          }\r\n        }\r\n      } else {\r\n        this.status2 = \"error\";\r\n        this.message2 = \"Imagen no subida.\";\r\n        this.delStatus();\r\n      }\r\n    },\r\n\r\n    delStatus: function () {\r\n      setTimeout(() => this.delMsgs(), 2000);\r\n    },\r\n    delMsgs: function () {\r\n      this.status = \"\";\r\n      this.message = \"\";\r\n      this.status2 = \"\";\r\n      this.message2 = \"\";\r\n    },\r\n\r\n    showModal: function () {\r\n      this.viewModal = true;\r\n    },\r\n    closeModal: function () {\r\n      this.viewModal = false;\r\n      this.setAddedClb(\"\");\r\n      this.setHistoryOptionClb(\"Default\");\r\n    },\r\n    Edit: function () {\r\n      this.viewModal = false;\r\n    },\r\n    back: function () {\r\n      setTimeout(() => this.$router.go(), 200);\r\n    },\r\n    toolbar: function () {\r\n      if (this.tipo == \"video\") {\r\n        return [[\"video\"]];\r\n      } else if (this.tipo == \"imagen\") {\r\n        return [[\"image\"]];\r\n      } else {\r\n        return [\r\n          [\"bold\", \"italic\", \"underline\", \"strike\"], // toggled buttons\r\n          [\"blockquote\", \"code-block\"],\r\n\r\n          [{ header: 1 }, { header: 2 }], // custom button values\r\n          [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n          [{ script: \"sub\" }, { script: \"super\" }], // superscript/subscript\r\n          [{ indent: \"-1\" }, { indent: \"+1\" }], // outdent/indent\r\n          [{ direction: \"rtl\" }], // text direction\r\n\r\n          [{ size: [\"small\", false, \"large\", \"huge\"] }], // custom dropdown\r\n          [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n          [\"link\"], // add's image support\r\n          [{ color: [] }, { background: [] }], // dropdown with defaults from theme\r\n          [{ font: [] }],\r\n          [{ align: [] }],\r\n\r\n          [\"clean\"], // remove formatting button\r\n        ];\r\n      }\r\n    },\r\n\r\n    previewFiles(e) {\r\n      var files = e.target.files || e.dataTransfer.files;\r\n      if (!files.length) return;\r\n      this.file1 = files[0];\r\n      this.archivo = this.file1.name;\r\n    },\r\n\r\n    srcImg: function (img) {\r\n      let src = `${urlpath.url()}/c15_BjM/UQ7-CoE/colaboradores-img/${img}`;\r\n\r\n      this.status_img(img);\r\n\r\n      return src;\r\n    },\r\n\r\n    status_img: async function (img) {\r\n      let payload = {\r\n        option: \"colaboradores\",\r\n        image: img,\r\n      };\r\n      let response = \"\";\r\n\r\n      try {\r\n        response = await this.$store.dispatch(\"main/getStatusImage\", payload);\r\n        if (response.data.status == \"error\") {\r\n          this.statusimg = \"error\";\r\n        } else {\r\n          this.statusimg = \"success\";\r\n        }\r\n      } catch (err) {\r\n        this.statusimg = \"error\";\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n#EditClb label {\r\n  color: var(--color-2);\r\n  font-weight: 700;\r\n  font-size: 0.7291666666666666vw;\r\n  margin-bottom: 0.3vw;\r\n}\r\n\r\n#EditClb input,\r\n#EditClb select {\r\n  height: 2.5vw;\r\n  width: 14.716666666666668vw;\r\n  border: 0.052083vw solid var(--color-2);\r\n  border-radius: 0vw 1.5vw 1.5vw 0vw;\r\n  color: var(--color-2);\r\n  font-size: 0.7291666666666666vw;\r\n  font-weight: 500;\r\n  padding-left: 1.09375vw;\r\n}\r\n\r\n#select-role {\r\n  height: 2.5vw;\r\n  width: 13.716667vw;\r\n  border: 0.052083vw solid var(--color-2);\r\n  border-radius: 0vw 1.5vw 1.5vw 0vw;\r\n  color: var(--color-2);\r\n  font-size: 0.7291666666666666vw;\r\n  font-weight: 500;\r\n  padding-left: 1.09375vw;\r\n  display: flex;\r\n  align-items: center;\r\n  background-image: url(\"../../assets/blueflecha.svg\");\r\n  background-repeat: no-repeat;\r\n  background-position-y: center;\r\n  background-position-x: 12.6vw;\r\n}\r\n#select-role.rounded {\r\n  border-radius: 0vw 1.5vw 0vw 0vw;\r\n  border-left: 0.052083vw solid var(--color-2);\r\n  border-right: 0.052083vw solid var(--color-2);\r\n  border-top: 0.052083vw solid var(--color-2);\r\n  border-bottom: 0;\r\n}\r\n#select-ch:checked ~ .options-cont {\r\n  display: flex;\r\n  position: absolute;\r\n  padding: 0.573vw 1.25vw;\r\n  flex-direction: column;\r\n  background-color: white;\r\n  width: 12.3vw;\r\n  border-left: 0.052083vw solid var(--color-2);\r\n  border-right: 0.052083vw solid var(--color-2);\r\n  border-top: 0;\r\n  border-bottom: 0.052083vw solid var(--color-2);\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}